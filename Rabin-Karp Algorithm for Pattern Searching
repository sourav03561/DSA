import java.io.*;
import java.util.*;
class GFG {
	public static void main (String[] args) {
		int d=26;//Number System
		int q=101;//prime Number
		String te="GEEKS FOR GEEKS";
		char[] text=te.toCharArray();
		String pa="GEEK";
		char pat[]=pa.toCharArray();
		int n=text.length;
		int m=pat.length;
		int p=0;//hash value for pattern
		int t=0;//hash value for text
		int h=1;
		int j=0;
		//The value of h would be pow(d,M-1)%q 
		for(int i=0;i<m-1;i++)
	      h=(h*d)%q;
	    
	    //calculate the hash value of pattern and text
	    //window of text
	    for(int i=0;i<m;i++)
	    {
	        p=(d*p+pat[i])%q;
	        t=(d*t+text[i])%q;
	    }
	    //slide the pattern
	    for(int i=0;i<=n-m;i++) 
	    {
	        //check the hash value of current window of text
	        //and pattern if the hash value match then only check for Character
	        if(p==t)
	        {
	            //check character one by one
	            for(j=0;j<m;j++)
	            {
	                if(text[i+j]!=pat[j])
	                {
	                    break;
	                }
	            }
	            if(j==m)
	            {
	                System.out.println(i);
	            }
	        }
	        if(i<n-m)
	        {
	            t=(d*(t-text[i]*h)+text[i+m])%q;
	            //we might get negative value of t,converting It 
	            //to positive
	            if(t<0)
	               t=t+q;
	        }
	    }
	    
		
		
	}
}
